FROM ubuntu:latest

# Instalar dependencias necesarias
RUN apt-get update && \
    apt-get install -y \
    openjdk-11-jre-headless \
    curl \
    unzip \
    trimmomatic \
    fastqc \
    wget \
    spades \
    python3 \
    build-essential && \
    rm -rf /var/lib/apt/lists/*

# Python
ENV PYTHON=/usr/bin/python3

# Descargar e instalar Nextflow
RUN curl -s https://get.nextflow.io | bash && \
    mv nextflow /usr/local/bin && \
    chmod +x /usr/local/bin/nextflow

# Instalar SRA Toolkit
RUN wget "http://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/current/sratoolkit.current-ubuntu64.tar.gz" && \
    tar -zxvf sratoolkit.current-ubuntu64.tar.gz && \
    rm sratoolkit.current-ubuntu64.tar.gz && \
    mv sratoolkit.* /usr/local/bin/sratoolkit && \
    mv /usr/local/bin/sratoolkit/bin/* /usr/local/bin/

# Instalar Bowtie2 manualmente
RUN wget -O /tmp/bowtie2.tar.gz https://github.com/BenLangmead/bowtie2/releases/download/v2.4.4/bowtie2-2.4.4-linux-x86_64.zip && \
    unzip /tmp/bowtie2.tar.gz -d /usr/local/bin && \
    rm /tmp/bowtie2.tar.gz

# Agregar directorio de Bowtie2 al PATH
ENV PATH="/usr/local/bin/bowtie2-2.4.4-linux-x86_64:${PATH}"

# Instalar Kraken2 manualmente
RUN wget -O /tmp/kraken2.tar.gz https://github.com/DerrickWood/kraken2/archive/refs/tags/v2.1.2.tar.gz && \
    tar -zxvf /tmp/kraken2.tar.gz -C /usr/local/bin && \
    rm /tmp/kraken2.tar.gz && \
    cd /usr/local/bin/kraken2-2.1.2 && \
    ./install_kraken2.sh /usr/local/bin

# Agregar directorio de Kraken2 al PATH
ENV PATH="/usr/local/bin/kraken2-2.1.2:${PATH}"

# Instalar BLAST y HMMER
RUN apt-get update && \
    apt-get install -y ncbi-blast+ && \
    wget http://eddylab.org/software/hmmer/hmmer.tar.gz && \
    tar zxf hmmer.tar.gz && \
    cd hmmer-3.4 && \
    ./configure --prefix /usr/local && \
    make && \
    make check && \
    make install && \
    (cd easel; make install) && \
    rm -rf hmmer.tar.gz hmmer-3.4

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Instala R y las herramientas de desarrollo necesarias
RUN apt-get update && \
    apt-get install -y --no-install-recommends r-base r-base-dev && \
    apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

# Instala el paquete devtools en R
RUN R -e "install.packages('devtools', repos='http://cran.rstudio.com/')"

# Instala el paquete XML en R
RUN R -e "install.packages('XML', repos='http://cran.rstudio.com/')"

# Descarga rentrez desde GitHub
RUN wget https://github.com/ropensci/rentrez/archive/refs/heads/master.tar.gz && \
    tar -zxvf master.tar.gz && \
    R CMD INSTALL rentrez-master/

RUN apt-get update && apt-get install -y autoconf

RUN apt-get update && \
    apt-get install -y git

# Instala VCFtools desde el código fuente
RUN git clone https://github.com/vcftools/vcftools.git && \
    cd vcftools && \
    ./autogen.sh && \
    ./configure && \
    make && \
    make install

RUN git clone https://github.com/lh3/bwa.git && \
    cd bwa && \
    make

# vcflib
RUN apt-get install -y libvcflib-tools libvcflib-dev

# Agrega el repositorio de Ubuntu
RUN echo "deb http://cz.archive.ubuntu.com/ubuntu jammy main universe" >> /etc/apt/sources.list

# Actualiza la lista de paquetes e instala freebayes
RUN apt-get update && \
    apt-get install -y freebayes

# Instalar paquetes de R
RUN R -e "install.packages('vcfR', repos='http://cran.rstudio.com/')"

RUN apt-get update && \
    apt-get install -y bcftools

# Instalar dependencias
RUN apt-get update && apt-get install -y \
    libdatetime-perl \
    libxml-simple-perl \
    libdigest-md5-perl \
    git \
    default-jre \
    bioperl

# Instalar BioPerl usando cpan
RUN cpan Bio::Perl

# Descargar el paquete libidn11
WORKDIR /downloads
RUN apt install -y wget && \
    wget http://mirrors.kernel.org/ubuntu/pool/main/libi/libidn/libidn11_1.33-2.2ubuntu2_amd64.deb

# Instalar el paquete libidn11
RUN apt install -y ./libidn11_1.33-2.2ubuntu2_amd64.deb

#############################################
# Actualiza el sistema e instala dependencias
RUN apt-get update && apt-get install -y \
    bioperl \
    ncbi-blast+ \
    gzip \
    unzip \
    git \
    libjson-perl \
    libtext-csv-perl \
    libpath-tiny-perl \
    liblwp-protocol-https-perl \
    libwww-perl \
    cpanminus \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Instala Perl modules necesarios
RUN cpanm LWP::Simple JSON Path::Tiny

# Instala any2fasta
RUN wget https://raw.githubusercontent.com/tseemann/any2fasta/master/any2fasta -O /usr/local/bin/any2fasta \
    && chmod +x /usr/local/bin/any2fasta

# Clona el repositorio de Abricate
RUN git clone https://github.com/tseemann/abricate.git /abricate

# Ejecuta los scripts de configuración de Abricate
RUN /abricate/bin/abricate --check \
    && /abricate/bin/abricate --setupdb

# Establece el directorio de trabajo
WORKDIR /abricate

# Ejecuta un comando de prueba
CMD ["/abricate/bin/abricate", "/abricate/test/assembly.fa"]

# Añade Abricate al PATH
RUN ln -s /abricate/bin/abricate /usr/local/bin/abricate

RUN Rscript -e "install.packages('rmarkdown', repos='http://cran.rstudio.com/')"

# Establecer el directorio de trabajo
WORKDIR /workspace